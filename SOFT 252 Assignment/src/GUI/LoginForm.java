/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DatabasePackage.SystemDatabase;
import GUI.Adminforms.AdminHome;
import GUI.DoctorForms.DoctorHome;
import GUI.PatientForms.PatientHome;
import GUI.SecretaryForms.SecretaryHome;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author afernandez
 */
public class LoginForm extends javax.swing.JFrame {

    /**
     * Creates new form LoginForm
     */
    public LoginForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        TxtUserID = new javax.swing.JTextField();
        TxtPassword = new javax.swing.JTextField();
        BtnLoginCheck = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("User ID");

        jLabel2.setText("Password");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Login");

        BtnLoginCheck.setText("Login");
        BtnLoginCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnLoginCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtUserID)
                            .addComponent(TxtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(BtnLoginCheck)))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(TxtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(TxtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(BtnLoginCheck)
                .addGap(47, 47, 47))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnLoginCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnLoginCheckActionPerformed
        
        String tempUserID = TxtUserID.getText();
        String tempPassword = TxtPassword.getText();
        
        for (int i = 0; i < SystemDatabase.userArray.size(); i++) {
            if (tempUserID.equals(SystemDatabase.userArray.get(i).getUserID())) {
                if (tempPassword.equals(SystemDatabase.userArray.get(i).getUserPassword())) {
                    //LOGIN TO CORRECT FORM
                    String userID = SystemDatabase.userArray.get(i).getUserID();
                    char firstChar = userID.charAt(0);
                    
                    if (firstChar =='A') {
                        new AdminHome(userID).getObj().setVisible(true);
                        AdminNotificationCheck();
                        this.dispose();
                    }
                    if (firstChar =='D') {
                        new DoctorHome(userID).getObj().setVisible(true);
                        DocNotificationCheck(userID);
                        this.dispose();
                    }
                    if (firstChar =='P') {
                        new PatientHome(userID).getObj().setVisible(true);
                        PatientNotificationCheck(userID);
                        this.dispose();
                    }
                    if (firstChar =='S') {
                        new SecretaryHome(userID).getObj().setVisible(true);
                        SecretaryNotificationCheck();
                        this.dispose();
                    }
                }
            }
        }
        //showMessageDialog(null, "Incorrect Details, please try again.");   
    }//GEN-LAST:event_BtnLoginCheckActionPerformed

    public void DocNotificationCheck(String docID){
        for (int i = 0; i < SystemDatabase.doctorFeedbackArray.size(); i++) {
            if (SystemDatabase.doctorFeedbackArray.get(i).getDoctorID().equals(docID)) {
                if (SystemDatabase.doctorFeedbackArray.get(i).isAdminApproved().equals("approved")) {
                    showMessageDialog(null, "You have new feedback, please review");
                    break;
                }
            }
        }
        for (int i = 0; i < SystemDatabase.appointmentArray.size(); i++) {
            if (SystemDatabase.appointmentArray.get(i).getDocID().equals(docID)) {
                if (SystemDatabase.appointmentArray.get(i).getStatus().equals("Verified")) {
                     showMessageDialog(null, "You have Appointments coming up");
                     break;
                }
            }
        }
    }
    
    public void AdminNotificationCheck()
    {
        for (int i = 0; i < SystemDatabase.doctorFeedbackArray.size(); i++) {
            if (SystemDatabase.doctorFeedbackArray.get(i).isAdminApproved().equals("unapproved")) {
                showMessageDialog(null, "You have new feedback to review");
                break;
            }
        }
    }
    
    public void SecretaryNotificationCheck()
    {
        for (int i = 0; i < SystemDatabase.medicineArray.size(); i++) {
            if (SystemDatabase.medicineArray.get(i).getNewMedicine() == true) {
                showMessageDialog(null, "Some doctors have requested new medicine");
                break;
            }
        }
             
        for (int i = 0; i < SystemDatabase.appointmentArray.size(); i++) {
            if (SystemDatabase.appointmentArray.get(i).getStatus().equals("Unverified")) {
                showMessageDialog(null, "You have appointments to approve");
                break;
            }
        }
        
        if (SystemDatabase.accountRequests != null) {
            showMessageDialog(null, "You have patient accounts to approve");
        }
        
        if (SystemDatabase.patientDeleteRequest != null) {
            showMessageDialog(null, "Some patients are requesting their account removal");
        }
    }
    
    public void PatientNotificationCheck(String patientID)
    {
        for (int i = 0; i < SystemDatabase.appointmentArray.size(); i++) {
            if (SystemDatabase.appointmentArray.get(i).getPatientID().equals(patientID)) {
                if (SystemDatabase.appointmentArray.get(i).getStatus().equals("verified")) {
                    showMessageDialog(null, "Your appointment has been approved, please check the date");
                    break;
                }
            }
        }
        for (int i = 0; i < SystemDatabase.prescriptionArray.size(); i++) {
            if (SystemDatabase.prescriptionArray.get(i).getPatientID().equals(patientID)) {
                if (SystemDatabase.prescriptionArray.get(i).getCompleted() == false) {
                    showMessageDialog(null, "You have a prescription that you have to pick up");
                    break;
                }
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnLoginCheck;
    private javax.swing.JTextField TxtPassword;
    private javax.swing.JTextField TxtUserID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
