/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.SecretaryForms;

import DatabasePackage.SystemDatabase;
import static GUI.SecretaryForms.SecretaryGetRequestedMedicine.currentUserID;
import java.util.ArrayList;
import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author afernandez
 */
public class SecretaryGivePrescription extends javax.swing.JFrame {

    /**
     * Creates new form SecretaryGivePrescription
     */
    static String currentUserID;
    public SecretaryGivePrescription(String userID) {
        initComponents();
        this.currentUserID = userID;
        SetCombValues();
    }

    public void SetCombValues()
    {
    ArrayList<String> a = new ArrayList<String>();
            for (int i = 0; i < SystemDatabase.prescriptionArray.size(); i++) 
            {
                if (SystemDatabase.prescriptionArray.get(i).getCompleted() == false)
                {
                    a.add(SystemDatabase.prescriptionArray.get(i).getPatientID());
                }
        }
        for (String value : a) 
        {
            CombPatientID.addItem(value); 
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CombPatientID = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtPrescriptionInfo = new javax.swing.JTextArea();
        BtnBack = new javax.swing.JButton();
        BtnGivePrescription = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Give prescription");

        jLabel2.setText("Patient ID:");

        CombPatientID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombPatientIDActionPerformed(evt);
            }
        });

        TxtPrescriptionInfo.setEditable(false);
        TxtPrescriptionInfo.setColumns(20);
        TxtPrescriptionInfo.setRows(5);
        jScrollPane1.setViewportView(TxtPrescriptionInfo);

        BtnBack.setText("Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        BtnGivePrescription.setText("Give patient medicine");
        BtnGivePrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGivePrescriptionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 44, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CombPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(113, 113, 113))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(BtnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BtnGivePrescription, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CombPatientID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BtnBack, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(BtnGivePrescription, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CombPatientIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombPatientIDActionPerformed
        // TODO add your handling code here:
        String patientID = CombPatientID.getSelectedItem().toString();
        
        for (int i = 0; i < SystemDatabase.prescriptionArray.size(); i++) {
            if (SystemDatabase.prescriptionArray.get(i).getPatientID().equals(patientID)) {
                TxtPrescriptionInfo.setText(SystemDatabase.prescriptionArray.get(i).getPatientID() + "\n"
                                      + SystemDatabase.prescriptionArray.get(i).getDoctorID() + "\n"
                                      + SystemDatabase.prescriptionArray.get(i).getDoctorNotes() + "\n"
                                      + SystemDatabase.prescriptionArray.get(i).getMedicine() + "\n"
                                      + SystemDatabase.prescriptionArray.get(i).getDosage() + "\n"
                                      + SystemDatabase.prescriptionArray.get(i).getQuantity());
                break;
            }
                       
        }
        
    }//GEN-LAST:event_CombPatientIDActionPerformed

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        // TODO add your handling code here:
        new SecretaryHome(currentUserID).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnGivePrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGivePrescriptionActionPerformed
        // TODO add your handling code here:
        String patientID = CombPatientID.getSelectedItem().toString();
        
        for (int i = 0; i < SystemDatabase.prescriptionArray.size(); i++) 
        {
            if (SystemDatabase.prescriptionArray.get(i).getPatientID().equals(patientID))
            {
                int medStock = findMedAmount(SystemDatabase.prescriptionArray.get(i).getMedicine());
                
                if ((medStock - Integer.parseInt(SystemDatabase.prescriptionArray.get(i).getQuantity())) < 0) {
                    showMessageDialog(null, "medicine not in stock, please notify paitent and order more");
                    new SecretaryHome(currentUserID).setVisible(true);
                    this.dispose();
                } else 
                {
                    int medPos = findMedPos(SystemDatabase.prescriptionArray.get(i).getMedicine());
                    
                    SystemDatabase.medicineArray.get(medPos).setStock( Integer.toString(medStock - Integer.parseInt(SystemDatabase.prescriptionArray.get(i).getQuantity())));
                    SystemDatabase.prescriptionArray.get(i).setCompleted(true);
                    
                    SystemDatabase.savePrescriptionArray();
                    SystemDatabase.saveMedicineArray();
                    showMessageDialog(null, "Prescription completed and handed to patient");
                    new SecretaryHome(currentUserID).setVisible(true);
                    this.dispose();
                
                }
                
            }
        }
    }//GEN-LAST:event_BtnGivePrescriptionActionPerformed

    public int findMedAmount(String medName)
    {
        for (int i = 0; i < SystemDatabase.medicineArray.size(); i++) 
        {
            if (SystemDatabase.medicineArray.get(i).getMedicineName().equals(medName))
            {
                return Integer.parseInt(SystemDatabase.medicineArray.get(i).getStock());
            }
        }
        return 0;
    }
    
    public int findMedPos(String medName){
    for (int i = 0; i < SystemDatabase.medicineArray.size(); i++) 
        {
            if (SystemDatabase.medicineArray.get(i).getMedicineName().equals(medName))
            {
                return i;
            }
        }
        return 0;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecretaryGivePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecretaryGivePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecretaryGivePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecretaryGivePrescription.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SecretaryGivePrescription(currentUserID).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnGivePrescription;
    private javax.swing.JComboBox<String> CombPatientID;
    private javax.swing.JTextArea TxtPrescriptionInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
